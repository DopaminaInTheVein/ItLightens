+ Normal map
+ Cubemap Environment

+ reload de shaders
+ Specular basic

+ Samplers
+ Directional lights diffuse

- Directional lights specular
- Shadows para directional lights
- Distorsiones en pantalla
- PBR
- Particulas


- Multithreading

+ Fix render when camera inside sphere
+ Combinar con el albedo
- Leak de DX

Render
- Hierarchies
- exportar las submeshes
- exportar colisones para physics
+ io keys + mouse
- ZBuffers
+ subir transform de los objetos
+ exportar una escena completa desde el max
+ tech leerlas de xml

Handles
+ Messages
+ IO de components / Creacion de entidades desde disco
	XML 
		Expat

- Controlador de camara
- ImGUI

    - Listado de entities
        - Listado de sus components
        - Borrar component/Add component?
- Prefabs

- Grupos de entities/Tags/Tags Managers
- Tags from strings    // https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp

- Exportador eficiente de maxscript
- Exportador de escenas de maxscript
- Exportador de materiales de maxsciprt

- Modulo de IO
- Modulo de Render 





- Reflection de datos
	TComp name 64


TODO
+ imgui
+ TTransform  quaterion + translation + scale	
+ Manager
+ Cargar meshes desde disco
	+ exportarlas desde max
	+ Vertex declaration con Pos + UV
	+ Crear index buffer para el CMesh
	+ Shader que use las pos
+ Techniques
+ Cargar texturas y usarlas

- Cargar una segunda textura 
- Un shader que reciba 2 texturas y en el pixel shader
  las multiplique

+ Exportar la Normal en el MAX
  - Hacer una vdecl que la use
  - Un vertex shader que la multiplique por la world
  - Un pixel shader que la use para dar algo de iluminacion
	L = normalize(1,1,1)
	float diffuse = dot( N, L )

- ImGui debug de textures + zoom segun sample de ImGuI
- Imgui caja de filtrado
- Imgui pedir reload de texturas

/ Resources -> expornerlo en la ImGuoi

- Optimizar el exportador para que vaya mas rapido


- Input + Keyboard